name: Docker Image CI

on:
  push:
    branches: 
      - $default-branch
      - development
      - master
    tags:
      - '*.*.*-*'
  # Run tests for any PRs
  pull_request:

env:
  IMAGE_NAME: php80-fpm

jobs:
  codespell:
    name: codespell
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Codespell
        uses: codespell-project/actions-codespell@master
        with:
          skip: .git
          check_filenames: true
          check_hidden: true
  super-linter:
    name: super-linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Lint Code Base
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    needs:
      - codespell
      - super-linter
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run:  docker build . --file Dockerfile --build-arg BUILD_DATE="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" --tag ${IMAGE_NAME}
    - name: Test the Docker image
      run: |
        CONTAINER_OUTPUT="$(docker run --rm -t ${IMAGE_NAME} -v)"
        TEST_STRING="$(echo "${CONTAINER_OUTPUT}" | grep -E '^PHP\s8\.0' | cut -d'.' -f3 --complement)"
        if ! [ "${TEST_STRING}" = "PHP 8.0" ]; then exit 1; fi
    - name: Testing characters
      run: docker run -i ${IMAGE_NAME} php -r 'print (iconv("utf-8", "ASCII//TRANSLIT", "ströng contäning ümlaöits"));' || exit 1
    - name: Scan image
      uses: Azure/container-scan@v0
      env:
        DOCKER_CONTENT_TRUST: 1
      with:
        image-name: ${{ env.IMAGE_NAME }}
        severity-threshold: HIGH
